pipeline:
  identifier: Build_skanodia1_docker_helloworld_node_microservice_1740699303910
  name: Build harness-exercise
  orgIdentifier: default
  projectIdentifier: default_project
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.Github_OAuth_1740698630998
        repoName: skanodia1/docker-helloworld-node-microservice
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          caching:
            enabled: false
            paths: []
          cloneCodebase: true
          execution:
            steps:
              - step:
                  identifier: installdependencies
                  name: install dependencies
                  spec:
                    command: npm install
                  timeout: ""
                  type: Run
              - parallel:
                  - step:
                      type: BuildAndPushGAR
                      name: BuildAndPushGAR_1
                      identifier: BuildAndPushGAR_1
                      spec:
                        connectorRef: account.GCP_Test_Connector
                        host: us-west2-docker.pkg.dev
                        projectID: focal-plateau-451819-i9/qa-harness-exercise
                        imageName: <+input>
                        tags:
                          - latest
                        caching: true
                  - step:
                      type: BuildAndPushGAR
                      name: BuildAndPushGAR_2
                      identifier: BuildAndPushGAR_2
                      spec:
                        connectorRef: account.GCP_Test_Connector
                        host: us-west2-docker.pkg.dev
                        projectID: focal-plateau-451819-i9/prod-harness-exercise
                        imageName: <+input>
                        tags:
                          - latest
                        caching: true
              - parallel:
                  - step:
                      type: Owasp
                      name: Owasp_1
                      identifier: Owasp_1
                      spec:
                        target:
                          detection: auto
                          type: repository
                        advanced:
                          log:
                            level: info
                          args: {}
                        mode: orchestration
                        config: default
                  - step:
                      type: OsvScanner
                      name: OsvScanner_1
                      identifier: OsvScanner_1
                      spec:
                        target:
                          detection: auto
                          type: repository
                        advanced:
                          log:
                            level: info
                          args: {}
                        mode: orchestration
                        config: default
              - step:
                  type: Gitleaks
                  name: Gitleaks_1
                  identifier: Gitleaks_1
                  spec:
                    target:
                      detection: auto
                      type: repository
                    advanced:
                      log:
                        level: info
                      args: {}
                    mode: orchestration
                    config: default
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          buildIntelligence:
            enabled: false
        type: CI
        description: ""
  tags: {}
